plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.30"
}

group 'personal.opensrcerer'
version '0.0.1'

sourceCompatibility = 16
targetCompatibility = 16

repositories {
    mavenCentral() // for transitive dependencies
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'personal.opensrcerer.SupersonicApplication'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = targetCompatibility
}

dependencies {
    // SLF4J
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.16.0'

    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // JDA
    implementation("net.dv8tion:JDA:4.4.0_352")

    // Jackson XML
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.0'

    // OkHttp4
    implementation('com.squareup.okhttp3:okhttp:4.9.3')

    // Reactor
    testImplementation 'io.projectreactor:reactor-test:3.4.13'
    implementation 'io.projectreactor:reactor-core:3.4.13'

    // Annotations
    compileOnly 'org.jetbrains:annotations:22.0.0'

    // LavaPlayer
    implementation 'com.sedmelluq:lavaplayer:1.3.78'

    // Apache-Commons
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // Reflections
    implementation 'org.reflections:reflections:0.10.2'
}

ext {
    javaMainClass = "personal.opensrcerer.SupersonicApplication"
}

test {
    useJUnitPlatform()
}

task runsupersonic(type: Exec, dependsOn: [compileKotlin, compileJava, processResources, classes]) {
    group = "Execution"
    description = "Run the supersonic bot"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), javaMainClass
}